Dictionary-driven protein annotation
Computational methods seeking to automatically determine the properties (functional, structural, physicochemical, etc.) of a protein directly from the sequence have long been the focus of numerous research groups. With the advent of advanced sequencing methods and systems, the number of amino acid sequences that are being deposited in the public databases has been increasing steadily. This has in turn generated a renewed demand for automated approaches that can annotate individual sequences and complete genomes quickly, exhaustively and objectively. In this paper, we present one such approach that is centered around and exploits the Bio-Dictionary, a collection of amino acid patterns that completely covers the natural sequence space and can capture functional and structural signals that have been reused during evolution, within and across protein families. Our annotation approach also makes use of a weighted, position-specific scoring scheme that is unaffected by the over-representation of well-conserved proteins and protein fragments in the databases used. For a given query sequence, the method permits one to determine, in a single pass, the following: local and global similarities between the query and any protein already present in a public database; the likeness of the query to all available archaeal /bacterial /eukaryotic /viral sequences in the database as a function of amino acid position within the query; the character of secondary structure of the query as a function of amino acid position within the query; the cytoplasmic, transmembrane or extracellular behavior of the query; the nature and position of binding domains, active sites, post-translationally modified sites, signal peptides, etc. In terms of performance, the proposed method is exhaustive, objective and allows for the rapid annotation of individual sequences and full genomes. Annotation examples are presented and discussed in Results, including individual queries and complete genomes that were released publicly after we built the Bio-Dictionary that is used in our experiments. Finally, we have computed the annotations of more than 70 complete genomes and made them available on the World Wide Web at .

The automatic elucidation of protein function directly from sequence has been the focus of research activity for many years. Such an elucidation has an obvious appeal for it tries to minimize the amount of associated manual labor by reducing a large number of possibilities to one or a handful of choices. This is typically achieved by tapping into repositories of previously accumulated knowledge and by trading computation (i.e. in silico approaches) for typically tedious manual analysis. The discovery of protein function directly from sequence, in an automated or semi-automated manner, has become a fundamental question as thousands of unknown proteins and increasing numbers of complete genomes are made available daily in the public domain. Of course, one should not lose sight of the fact that protein annotation is the first step in the attempt to fully describe a particular organism through characterization of its metabolic pathways and transcription regulation networks. During the last three decades, numerous methods have been proposed for determining protein function from sequence, all of which are essentially instances of a 'guilty by association' approach to solving this problem. Depending on the nature of the information exploited and the manner in which the information is used, these methods can essentially be divided into a handful of well-differentiated categories. The chronologically earliest examples of protein annotation methods rely on the determination of a local or global similarity between a query protein and proteins with known annotation that are contained in a database ( --). If two sequences of comparable length share a large portion of their extent, the previously uncharaterized sequence will inherit the function of the annotated one. The validity of this scheme relies on the implicit assumption that two sequences that 'look the same' at the sequence level also have the same function and structure. This is a reasonable assumption, but counter-examples such as the dehydrogenase /z-crystallin case have also been documented in the literature (for a discussion of this particular case see for example ). The methods in this category are known as 'similarity-based' or 'homology-based' and are numerous. The approach we present in this paper belongs to this category as well. A recurrent situation within the similarity-method category that is pertinent to our discussion relates to the inclination of annotators to use either the first or the best 'hit' from the output of a database search that is carried out by one of the similarity search algorithms such as FASTA , BLAST , Smith-Waterman , etc. In the presence of domains that are shared by numerous proteins , choosing the first or the best hit may not be optimal. As a matter of fact, the multi-domain organization of proteins can lead to incorrectly annotated database entries (Fig.  shows a characteristic example of such a misannotation). Use of a domain scan and the exploitation /analysis of the generated output when annotating a query can substantially improve the results. Such a domain scan can be implemented, for example, with the help of the PROSITE, PRINTS, PFAM, BLOCKS or PRODOM databases ( --). For a description of other sources of potential concern in protein annotation and some recommended solutions the reader is referred to previous publications ( --). A second category of methods has become known as the Rosetta stone approach (also known as the domain fusion method) ( --). Here, one seeks to determine groups of proteins that are distinct in a given organism but appear as a single product in another organism, the result of an assumed fusion event. The distinct proteins in the original group are assumed to be physically interacting and, depending on the specifics of each case, this information can be helpful in determining protein function. The methods in the third category seek to determine groups of proteins that repeatedly appear as neighbors of one another in the chromosomes of different organisms. The proteins involved are assumed to have a functional relationship (this methodology is similar in flavor to the Rosetta stone approach but distinct with respect to the type of information that it uses). Exploitation of this idea has found a best fit in the case of prokaryotic genomes where proximal gene organization is manifested in the form of operons, and it has been used successfully to guide functional annotation . It is not evident, however, whether this idea carries over to eukaryotic organisms due to the fact that, in general, the latter lack operons. A closely related variation, which does extend to eukaryotic organisms, operates on the assumption that if an organism is in need of a specific pathway then the organism will carry all or most of the genes comprising the pathway, and vice versa. For example, the work of Marcotte  and similar work done by others attempt to define function in terms of the pathways and complexes in which the protein participates, rather than suggest a specific biochemical activity: in this framework a protein is associated with a function via its linkages to other proteins. Finally, in recent years, a fourth category has emerged. Here, one tackles the problem of protein function elucidation through the analysis of correlated mRNA expression of the type that is encountered in the context of DNA- and microarray-chip experiments. The underlying assumption is that functionally related proteins will exhibit correlated mRNA expression levels under multiple experimental settings. Consistent participation of a previously uncharacterized protein in clusters comprising proteins with a well-understood function imposes constraints on the unknown protein's possible behavior by restricting its candidate memberships within the context of a metabolic pathway . In principle, this method can help resolve a protein's function. A more recent variation of this general approach measures levels of protein expression (instead of mRNA) with the help of mass spectrometry or 2D gel electrophoresis in an attempt to determine clusters of strongly co-expressed proteins: these clusters can be used to determine the function of uncharacterized proteins. We next present and discuss a new approach to the problem of protein annotation. At the center of our approach is the Bio-Dictionary, an exhaustive collection of amino acid patterns, heretofore referred to as seqlets, that completely covers the natural sequence space of proteins to the extent that the latter is sampled by the currently available biological sequences. In earlier studies, we showed that the seqlets can capture both functional and structural signals that have been reused during evolution within and across families of related proteins. Our approach relies on the seqlets contained in the Bio-Dictionary and the associated information that is available in a well-maintained database such as SwissProt /TrEMBL , derives from an earlier prototype system we built to carry out similarity searching (,) and employs a weighted, position-specific scoring scheme that is not affected by the over-representation of well-conserved proteins and protein fragments that are present in the public databases. Although similar in intent to systems like GeneQuiz , our method goes beyond simply stating the presence of local and global similarities between a query and one or more database sequences: in fact, we also report information about the secondary structure characteristics of the query, the presence of known domains, signal peptides, active sites, post-translationally modified sites, cytoplasmic /extracellular behavior, the similarity of the query to each of the three phylogenetic domains as a function of amino acid position, etc. Figure 1 |  An example of incorrect protein annotation as a result of multiple domain sharing.  An example of incorrect protein annotation as a result of multiple domain sharing. The sequences have been aligned in a manner that shows their common domains. The 'd-arabino 3-hexulose 6-phosphate formaldehyde lyase' function has been propagated from the HUMS_BACSU sequence to the rest of the sequences in this group. Instances of the same domain have been shown in the sequences that contain it using the same color and shading scheme.
Background | The Bio-Dictionary idea was introduced and discussed in earlier works ( --); therein we described how one can use the Teiresias pattern discovery algorithm (,) to process a very large public database of amino acid sequences and fragments and derive a collection of amino acid patterns that, by design, appear within as well as across family boundaries. These patterns are referred to as seqlets and have been shown to capture functional and structural signals; moreover, they have the very important property of completely describing the processed input at the amino acid level. Following are some seqlet examples that include the name of the represented feature or of the represented protein family, taken from Rigoutsos et al. : GDG[IVAMTD]ND[AILV][PEAS] [AMV][LMIF]..A (cation-transporting ATPases), V.I.G. G..G...A (NAD /FAD-binding flavoproteins), G..G.GK[ST]TL (ATP /GTP-binding P-loop), KMSKS[LKDIR][GNDFQ]N (class I aminoacyl-tRNA synthetases), H.....HRD.K..N (serine /threonine protein kinases), etc. In terms of the notation used, [LKDIR] means a choice of exactly one among L, K, D, I and R, whereas '.' denotes a single position wild-card character that can replace any of the symbols in the alphabet. The derived collection of seqlets can thus be treated as a (redundant) vocabulary for the natural sequence space of proteins to the extent that the latter is uniformly sampled by the currently available biological sequences. Associating the entries of this vocabulary-like collection with the annotation information contained in a typical entry of the SwissProt database allows us to convert the collection into a dictionary. We have been using the term Bio-Dictionary to refer to the collection of seqlets that has been augmented so as to include the 'annotation meaning' for each of the entries. The key elements behind the Bio-Dictionary, and details of its construction, can be found in Rigoutsos et al. ; analysis of the 3D structural properties associated with the seqlets of a dictionary built out of 17 complete archaeal and bacterial genomes are given in Rigoutsos et al. ; finally, a discussion and description of potential uses for it appears in Rigoutsos et al. . In more recent work, we applied the Bio-Dictionary to in silico prokaryotic gene finding and built a system with exceptional performance : unlike approaches that are based on Markov models where each distinct genome requires that a different model be built, our gene finding system is universal in that a single instance of it is used across all archaeal and bacterial genomes.  The earlier work | By carrying out pattern discovery on a given sequence database D, we can use the generated pattern collection C to carry out similarity searches for instances of a query or its fragments in D as follows: a pattern from the derived collection C of patterns that matches a region of the query under consideration pinpoints a potential local similarity between the matched region of the query and all of the sequence fragments from the input database that the pattern represents (recall that by the definition of pattern discovery, patterns appear k or more times in the processed input, with k >= 2). In earlier work, we used the Teiresias algorithm to process Release 34 of the SwissProt database and built a prototype system for similarity searching using only a subset C' from the derived collection C of patterns. A given query sequence was examined for matches of patterns contained in C' and the query and database regions corresponding to the matches were aligned, scored, and finally sorted according to the computed score. Following the sorting, one could proceed in one of two distinct ways: (i) the user was presented with the collection of patterns that matched the query and was asked to identify those of biological importance, then alignments were generated using those patterns alone; (ii) those alignments that resulted from patterns whose database instances carried an associated annotation (namely the 'FT' line) were reported to the user for further study (,). This early system was meant to be a proof of concept. Consequently, complete coverage of the input database by the patterns in the collection C' was neither achieved nor pursued. As a matter of fact, this early system used a mere 565 432 patterns which covered similar50% of the processed SwissProt database at the amino acid level. Neither the existing over-representation of various protein families in the database nor the system's real-time performance were design considerations at that time. However, this early excursion provided an invaluable learning experience that helped guide us toward the system which we present next.  The method: description | The first and foremost consideration of the new approach is the achievement of a complete coverage of the natural sequence space as it is currently known. To that end we used as our domain of knowledge the 14 May 2001 release of SwissProt /TrEMBL, a large, publicly available and curated database . This particular release comprised 532 621 amino acid sequences and fragments with a grand total of 170 762 058 amino acids. We processed this input database in two phases. First, we ran Teiresias using L = 8, W = 8 and K = 2 and generated variable length seqlets that contained no wild-cards. For each one of these seqlets, we located and masked all of its instances in the input database except for the one that appeared in the longest among the sequences containing instances of the seqlet. We then reran Teiresias on the masked input, but this time using L = 6 and W = 15. For more information about this scheme and other methodological details the reader is referred to Rigoutsos et al. . The processing required similar45 CPU days worth of computation using IBM RS64III processors with a clock speed of 450 MHz. With the help of a parallel implementation of Teiresias that we have developed for shared memory architectures, we completed this computation in 2 days on a 24 processor IBM S-80 supercomputer. The two pattern discovery phases generated the Bio-Dictionary that we used in our analysis and which contained a combined total of 42 996 454 seqlets [compare the size of the current collection with the 565 432 patterns used in Floratos et al. (,)] that accounted for 98.2% of the processed input at the amino acid level (this degree of coverage essentially implies that, on average, a mere five amino acids per protein sequence cannot be accounted for by this seqlet collection). The length and density distributions of these seqlets match closely the ones shown in Rigoutsos et al. , whereas the average length of a seqlet is similar12 --13 amino acids. It should be noted that this Bio-Dictionary contains redundant seqlets, i.e. a given amino acid position in the processed input will typically participate in and is covered by multiple seqlets; this redundancy of representation is a desired property which we exploit during annotation. Each seqlet in the collection carries along the meaning(s) associated with the regions of the proteins that contained an instance of and gave rise to the seqlet. Instead of a static description of each seqlet's meaning(s) in the manner that we described in Rigoutsos et al. , we opted for composing the full entry of each seqlet during the run time as required. We currently derive labels for meanings from only the DE, OC and FT lines of the respective SwissProt /TrEMBL entry; obviously, we can tap into any database containing complementary information and attach additional meanings to each seqlet. One obvious choice is the PDB (,): in previous publications (,) we described how 3D structure can be associated with seqlets and are currently in the process of extending the approach presented herein in order to reconstruct local 3D structure using the structural hypotheses generated by partially overlapping seqlets (D.Platt, I.Rigoutsos, Y.Gao and L.Parida, submitted for publication). Recall that the DE or 'description' line of SwissProt contains general descriptive information about the respective entry. Similarly, the OC or 'organism classification' line contains the taxonomic classification of the source organism. And the FT or 'feature table' line contains a simple and precise means for the annotation of the sequence data: a fixed abbreviation with a defined meaning relating to the feature being reported is followed by the residue numbers indicating the end points (extent) of the named feature; the line ends with a description containing additional information about the feature. Of the available SwissProt /TrEMBL abbreviations contained in an FT line we only make use of the ones listed in Table . When presented with a query Q to annotate, we carry out the steps outlined in Figure , a markedly different approach than the one used in our early prototype. First, we generate the 'intersection' of the Bio-Dictionary with the query sequence to find those seqlets that match somewhere in the query. For each of the seqlets in this intersection, we examine the corresponding SwissProt /TrEMBL entries for all of the sequences that gave rise to the seqlet during the Bio-Dictonary formation, thus building the corresponding dictionary entry 'on-the-fly' by dynamically attaching to the seqlet all the meaning(s) extracted from those entries. The extracted meanings essentially 'color' each seqlet and by extension the region of the query where the seqlet matches. Note that a given seqlet can carry multiple 'colors', i.e. attributes. Con sequently, a region of the query can be associated with multiple attributes. If the seqlet under consideration is attached to an attribute that has not been encountered before, then a new attribute vector is introduced: the attribute vector has the same length as the query and initially contains zeroes everywhere; the current seqlet assigns its contribution CONTRIB(.,.) to this new attribute vector at precisely the region corresponding to the seqlet's match in the query. If the seqlet carries an attribute that has been encountered before, the seqlet adds its contribution CONTRIB(.,.) to the appropriate region of the already existing attribute vector. Multiple seqlets that carry the same attribute will add their individual contributions to the attribute's vector: the regions to which the seqlets contribute may or may not be overlapping. The manner in which we decide what amount a seqlet will contribute to an attribute vector is described in detail below. After all seqlets in the intersection have been exhausted, and separately for each attribute category (e.g. DE, FT, etc.), the attribute vectors are sorted and ranked based on the accumulated support and the top T ranking vectors of the category are reported (T is a user-specified parameter). Each of these vectors will contain non-zero values at precisely those regions that were matched by possibly overlapping, distinct seqlets that carried the same attribute. Before we describe the scoring scheme it is important to stress some points that are particular to our work. In general, the Bio-Dictionary should not be seen as a collection of seqlets each of which necessarily captures a specific feature such as a kinase domain, a metal binding site, etc. Seqlets that can act as predicates for a feature or protein family do exist in the Bio-Dictionary, but, by design, seqlets may also carry multiple meanings. This is different from the one-to-one correspondence that the reader may be accustomed to and which is typical of predicate-containing databases such as PROSITE, PRINTS and INTERPRO (,,). As we showcased previously , a seqlet can cross functional and structural boundaries and can thus be associated with multiple meanings. Clearly, those of the seqlets that are associated with a unique meaning can function as predicates, but a significant number of them will capture and correspond to multiple meanings. Similarly, the Bio-Dictionary also contains multiple seqlets all of which capture the same meaning. These seqlets can also have instances that overlap with one another, as indicated by the fact that the product of the number of seqlets contained in the Bio-Dictionary times the seqlets' average length is a multiple of the actual length of the processed input . Thus, by design, a given position of a processed query will in general be covered by multiple seqlets. Each of the seqlets covering a position within the query will in general carry one or more meanings that are used to 'color' the corresponding region of the query. Let a given query position be covered by M distinct seqlets. In order for an attribute, e.g. 'metal-binding site', to rank high in the reported results, a large portion of those M seqlets must carry this attribute. Recall that, by definition, each of the seqlets of the Bio-Dictionary appears in at least two places in the processed database (SwissProt /TrEMBL in our case): thus, if M seqlets cover a given position in the query to annotate, then the following two properties will simultaneously hold: *there exists a total of F sequence fragments corresponding to all of the instances of the M seqlets in the processed input database; clearly, these fragments will be similar to the amino acid neighborhood surrounding this query position; *the F sequence fragments in the database will agree on the amino acid identity of the literals (recall that the seqlets contain both literals and wild-cards, i.e. 'dots') contained in each of the M seqlets. These database sequence fragments may or may not agree on the annotation of the query position under consideration. If the annotations for N of these F database sequence fragments state that this site is a metal-binding site then through application of the 'guilty by association' approach, our belief that this query position is also a metal-binding site will be proportional to N /F. This very idea is applied to every attribute and attribute category that is attached to a seqlet. The direct implication of this is that a seqlet can be useful and able to contribute to a specific annotation without having to span an attribute (e.g. protein kinase domain) in its entirety. Moreover, the seqlet does not have to be a predicate for an attribute either. Figure  graphically depicts this situation. For discussion purposes, let us assume that when we searched the query Q with the Bio-Dictionary, we determined that seqletK is present in Q in the region [qfrom, qto]. Let us also assume that during the Bio-Dictionary formation, seqletK was determined to have three instances in the processed SwissProt /TrEMBL database. After following these three backpointers to the full entries of the sequences that contain the three instances of seqletK, we determine that in one of the sequences the seqlet instance spans an interval [pfrom, pto] that has a non-empty intersection with a specific region [featfrom, featto] of that sequence that is annotated as np_bind atp, i.e. as an ATP-binding site. Let [ifrom, ito] denote the intersection of the intervals [pfrom, pto] and [featfrom, featto]. In this example, seqletK will corroborate the presence of a partial ATP-binding domain in the query that is being annotated by incrementing the support at the locations [qfrom + (ifrom  -- pfrom), qfrom + (ito  -- pfrom)] of the np_bind atp attribute vector. It should now be clear why any given seqlet does not have to serve as a predicate for the attribute(s) that it corroborates. The term 'attribute' is overloaded in our discussion and should be interpreted rather loosely: it can mean a local similarity, a global similarity, an active site, a phylogenetic domain, a post-translationally modified location, etc. If the query being annotated contains a true instance of a given attribute, then each one of the numerous seqlets that will cover the region spanned by the attribute more than once will cumulatively and independently provide support for the attribute at the respective positions: as the accumulated support for the attribute increases so does the likelihood of its presence in the query. If the query is a true member of a known protein family, then we expect the attribute vector for this family to obtain support along its entire length from practically every single one of the seqlets that match in this query. If a query contains a known domain, then the attribute vector for the domain will have non-zero support over the region of the query that corresponds to the domain's instance. In an analogous manner, if the processed query shares only a local region with a well-characterized family or an individual protein, then the corresponding attribute vector will have non-zero support only over the shared region. The manner in which we use the seqlets and accumulate scores has proven particularly useful in situations that, among others, include the following: the query is a fragment of a known sequence; the query contains one or more known domains in a novel order; the query has been assembled using an incorrect exon collection (e.g. one or more true exons are missing, introns have been mislabeled as exons and included in the assembly, exons that correspond to distinct genes have been assembled together, etc.). Moreover, the fact that our seqlets have lengths that typically span between 6 and 18 amino acids (for a detailed discussion see ) permits us to easily and correctly process very short input queries, e.g. 8 --10 amino acids, without the thresholding constraints and limitations that one typically encounters when using heuristics-based similarity search algorithms (,). In real-world applications, situations arise where the query represents or contains only a fragment from a known domain, for example a query involving the first few tens of amino acids from say a 'protein kinase domain'. In order to alert the user to this situation, we also include, wherever applicable, the 'minimum', 'average' and 'standard deviation' values for the span of each of the T top ranking reported attribute vectors. This permits easy determination of whether the query represents a complete instance of the stated attribute or only a fragment.  The method: scoring | How much to contribute. Above we described how we determine the extent of an attribute vector region to which a seqlet matching the query will contribute. We now discuss how we determine the amount that the seqlet will contribute. Let seqletK be present in query Q and let qi1qi2qi3...qil and pj1pj2pj3...pjl be its instances in the query and in some database sequence d, respectively; let {i1, ... il} and {j1, ... jl} denote the indices of the positions spanned by the seqlet in the query Q and sequence d, respectively. For simplicity, we will assume that the instance of seqletK completely spans an annotated region of d that corresponds to an attribute A. SeqletK brings together two sequence fragments with lengths equal to the span of the seqlet; one fragment comes from the query that is being analyzed while the other is from the sequence d of the database. Obviously, the more similar these two fragments are the more likely it is that upon completion of the annotation process the attribute A that is associated with the database region pj1pj2pj3...pjl will be carried over to the query region qi1qi2qi3...qil through the 'guilty by association' approach. There is a rather straightforward manner in which seqletK can contribute to the vector for attribute A; we simply use one of the available scoring matrices and generate contributions in a position- and content-dependent manner as follows: for m = 1 to l {attribute_vector[i1 + m  -- 1] += f(scoring_matrix[qi1 + m  -- 1][pj1 + m  -- 1])} (the symbol += is shorthand notation for 'increment by amount shown on the right of the = sign'). In other words, the seqlet will contribute to the (i1 + m  -- 1)th position of the attribute vector an amount that relates to the degree of similarity between the amino acids occupying the positions qi1 + m  -- 1 and pj1 + m  -- 1, respectively. A good choice for the function f(.) above is f(x) = 2x + constant; with regard to the scoring matrix to use one can employ any of the standard PAM or BLOSUM scoring matrices (,). In order to avoid the over-counting that would be the consequence of a given protein family or fragment being over-represented in the SwissProt /TrEMBL database, we impose the additional constraint that a given seqlet cannot contribute to the same attribute vector and vector position(s) more than once. In other words, if seqletK captures a very well-conserved region appearing in a large number of SwissProt /TrEMBL sequences, only one of the seqlet's numerous annotated database instances will contribute to the respective attribute vector. How to normalize. As mentioned already, a given seqlet with distinct possible meanings will contribute in turn to each of the attribute vectors that correspond to those meanings. And these contributions will depend on how well a known database instance of the attribute matches its alleged instance in the query. Different attribute vectors will accumulate different amounts of contribution and these contributions will also depend on the position within the attribute vector. During the annotation of the query we maintain a book-keeping array, total_contrib, with length equal to that of the query; for every seqlet with an instance qi1qi2qi3...qil in the query, we update total as follows: for m = 1 to l {total_contrib[i1 + m  -- 1] += f(scoring_matrix[qi1 + m  -- 1][pj1 + m  -- 1])} In other words, the ith position of total_contrib is a measure of the number of seqlets that contribute to it, with each contribution weighted by the degree of similarity between the amino acids in the query and their input database counterparts. The function f(.) is the same as in the previous section. Note that at all times during processing, the value of total_contrib[i] is greater than or equal to the maximum value one will encounter in the ith position of any of the active attribute vectors for this query. Once all of the seqlets matching the query have been examined, we normalize the contents of the ith position of each attribute vector by dividing by the value of total_ contrib[i]. Multiplying this normalized value by 100 gives us, for each attribute vector, a measure of the fraction of the total contribution that this attribute has received, as a function of position within the query. Well-conserved attributes will have values close to 100% whereas less conserved attributes will have fewer seqlets contributing to them and thus will have smaller values. Note that this particular way of normalizing has the additional property of alleviating the situation where equal length regions of the query receive disproportionately different contributions due to differences in the number of contributing seqlets: this normalization will permit all regions in the query to have equally 'strong voices'. How to rank. Once the contents of the attribute vectors have been normalized, we sort them based on their received contributions and report the top T of them. We have implemented a scheme that will rank a narrow, well-conserved region higher than a wider region which is not as well conserved. This permits us to report attributes such as well-conserved active sites or post-translationally modified sites among the top ranking positions of the results. Finally, when we report local similarities, we further require of the attribute vectors pertaining to similarities that any set of consecutive non-zero positions be at least X positions wide; the value of X is user-defined and typical values range in the interval [10, 20].  The method: how to find matches in the query | In order to efficiently implement the above method we need to be able to quickly determine which of the Bio-Dictionary seqlets match where within the query. A simplistic approach would require that, for the similar43 000 000 seqlets and every single query position, we check whether there is a match; this would of course be very slow. The problem of identifying such matches is complicated by the presence of wild-cards ('don't care characters') in the seqlets that we use. To deal with this situation, we have designed and implemented a novel and very efficient method for solving precisely this problem: our method makes use of a very efficient hashing scheme that subselects among the Bio-Dictionary seqlets prior to using the ones that survive in conjunction with a modified version of the Aho-Corasick algorithm . The resulting scheme permits us to fully annotate a 300 amino acid protein in similar10 s on a single IBM RS64III processor running at a clock speed of 450 MHz. The description of this matching algorithm extends beyond the scope of this presentation and will be given elsewhere (M.Lewenstein, T.Huynh and I.Rigoutsos, in preparation).  Figure 2 |  Pseudo-code showing the computational steps of the method.  Pseudo-code showing the computational steps of the method. Figure 3 |  Accumulating seqlet contributions.  Accumulating seqlet contributions. Seqlets do not have to span a feature in its entirety in order to corroborate an attribute. Nor do they have to be specific enough to act as predicates for the attribute. See also text for more details. Table 1 | FT line labels used in our work (see also text)
We next showcase the capabilities of our approach by annotating a carefully selected collection of example queries and discussing the results obtained. All of the results we report in this section can be reproduced using the Web-based implementation of our method, available at . The underlined text in the figures generated by the Web-based tool is in fact hyperlinks which permit the user to issue a search request to SwissProt /TrEMBL and retrieve all of the database entries with the property stated by the text. This capability is meant to facilitate cross-comparisons and verification of the reported results. Moreover, upon completion of an annotation, the user can view the Bio-Dictionary patterns that matched within the query, as well as each pattern's estimated log probability and the actual position within the query where the match begins. Example 1. UBIQ_HUMAN | As our first example, we examine the annotation of the 76 amino acid human ubiquitin, UBIQ_HUMAN. Some of the results of the analysis are shown in Figures  --. As can be seen from these figures, the SwissProt /TrEMBL database contains enough information for our method to correctly determine the secondary structure of the fragment: notice the localization of the helices, strands and turns and their interweaving in Figure . It is not always the case that there will be enough information in SwissProt /TrEMBL for us to be able to make statements about the local secondary structure of a query. This limitation can be alleviated in one of two ways: (i) we can rely on SwissProt /TrEMBL's continuing augmentation and updates ---as the database becomes bigger and more enriched, our capability to annotate local structure will also improve; (ii) we can make use of the information in the PDB database in the manner that we have described (,). The seqlets' meanings will be enriched by incorporating structural information from the much more comprehensive PDB; we are currently in the process of augmenting our annotation method so that it will include this component. Finally, note how our method correctly determines the nature and position of seven sites that are relevant to the function of ubiquitin as well the presence and extent of the ubiquitin domain.  Example 2. A very short fragment | For our second example, we have selected the 8 amino acid fragment VVVTAHAF, a fragment that is too short to be used with heuristics-based similarity search algorithms such as FASTA and BLAST /PSI-BLAST. As shown in Figure , when we process this fragment with our method we can correctly determine that: (i) it is an amino acid combination encountered only in the eukaryotic domain; (ii) it belongs to a cytochrome c oxidase; (iii) it is part of a transmembrane domain; and (iv) it has a metal-binding site (iron) at the sixth position from the beginning, i.e. at the position of the histidine.  Example 3. ACTR_BOVIN | Another capability of our system is the determination of cytoplasmic, transmembrane and extracellular regions in a given query. We showcase this using ACTR_BOVIN, an adrenocorticotropic hormone receptor protein from Bos taurus. Figure  shows the plots for the cytoplasmic and extracellular behavior of the query as determined by our method: note that the regions of the query that are not accounted for by these two plots correspond precisely to the seven transmembrane domains of the ACTR_BOVIN (the corresponding transmembrane plots are not included in this figure).  Example 4. UL78_HCMVA | The next example is a sequence that comes from the human herpesvirus 5 . In particular, it is the 431 amino acid sequence UL78_HCMVA. In Figure  we show the output of both RPS-BLAST and PSI-BLAST  on this specific query sequence: as can be seen, the only detectable similarity is with the rhodopsin family and is confined in the region [60, 170]; no other similarities can be determined outside this region (the PSI-BLAST hit at the second position is with an uncharacterized sequence from the Tupaia herpesvirus and thus is not informative). One possible interpretation is that there is no single sequence in the SwissProt /TrEMBL database that resembles UL78_HCMVA (other than the query itself and its Tupaia herpesvirus counterpart), either in terms of the order of any domains that may be present or in terms of its composition. When we process UL78_HCMVA with our method, we discover weak similarities that relate UL78_HCMVA mainly to hypothetical proteins in a manner that is similar to what is shown in Figure . However, further inspection of our results provides us with enough information to appropriately categorize the query. In Figure  we show the plot for the query's transmembrane behavior as reported by our method: seven very distinct regions are immediately apparent, thus permitting us to conjecture that this sequence is a G protein-coupled receptor homolog. The seven regions correspond to the intervals 45 --61, 74 --95, 112 --132, 154 --174, 202 --222, 236 --256 and 280 --300, respectively, and have well-delineated boundaries. Notably, a similarity search in the GPCRDB database using UL78_HCMVA as the query currently generates no hits to known families. In Table  we show the alignment for the best ranking hits obtained when we search the GPCRDB database subset that contains only SwissProt entries (but not TrEMBL) using each of the seven putative transmembrane regions as a query. If the UL78_HCMVA putative transmembrane regions correspond to transmembrane helices of a GPCR homolog one will expect to see them matching known transmembrane regions from sequences in GPCRDB. This is indeed the case, as this table shows: the regions of the GPCRDB /SwissProt hits that are labeled as transmembrane regions of a G protein-coupled receptor are shown underlined bold next to each of the seven queries. The only exception is the query corresponding to the putative TM helix 3, where the best match is to a transmembrane region from PSAB_ANTMA, a photosystem protein. In all seven cases the quality of the conservation is notable. It should also be noted that several sequences other than UL78_HCMVA were reported as GPCR homologs when the analysis of the complete genome of the human herpesvirus 5 was first published .  Example 5. Comparison with the annotations of recently published /updated genomes | We next showcase the capability of our approach by processing the complete genomes of three organisms whose sequences were published after 14 May 2001 and compare our results with the annotations that accompanied the release of the respective genomes. Since the Bio-Dictionary that we used for our experiments was built using the SwissProt /TrEMBL release of 14 May 2001, the results from these comparisons are indicative of our method's ability to extrapolate and annotate novel sequences. Additionally, we annotated two genomes whose sequences were released into the public domain prior to 14 May 2001. Obviously, the sequences of these organisms are already contained in the input database from which we built the Bio-Dictionary used in these annotations. However, the GenBank database entries for these genomes and the respective annotations were updated several months after 14 May 2001: it is these more recent annotations that we use for our comparative study and not the annotations that accompanied the original genome submission. The purpose behind these comparisons is to determine the extent of agreement between our predictions and the original annotators' updated predictions when using a sequence database that has been substantially augmented since the genomes under consideration were originally deposited. It should be stressed that any such comparisons can only provide estimates of what a user can expect when using our method to annotate a genome. Indeed, the very notion of an automated comparison of different annotation collections is, to a certain degree, ill-defined. The following observations will make this last statement clear. First, the published genomes are sequenced, annotated and released by different research groups which employed different automated tools in conjunction with generally distinct, although overlapping, knowledge bases of annotated biological sequences. Once the automatically obtained gene annotations become available, they are typically curated manually during a 'genome annotation jamboree' by a different team of scientists each time and using non-standard nomenclature and abbreviations. As a result of this manual curation, the annotations that accompany a newly published genome contain much more that simply the result of applying a 'guilty by association' automated approach. This last observation puts us at a distinct disadvantage when carrying out the comparisons that we report below. Independently of the annotation approach that is used, there is always the issue of what it means to have 'annotated a protein'. Even ignoring disagreements in the annotations of individual proteins, several levels of detail are possible when making an annotation. As an example, Table  shows valid, non-contradicting annotations for a fictitious protein: the thing to notice here is the different amount of information that is conveyed by each annotation statement. Ideally, one seeks the most detailed description possible for the available knowledge base. The possibility of different levels of annotation detail adds an extra degree of difficulty and can result in annotation disagreements when lists of annotations that have been reported by different groups at different points in time are automatically compared with one another (,, --). Even if one ignores the above difficulties, differences can still arise as a result of using different guidelines and criteria each time, thus leading to substantial variations in the claimed percentage of genes that can be annotated in a newly sequenced genome based on sequence similarity with known proteins. Generally speaking, the current state of the art permits one to report functional hypotheses for similar70% of the predicted genes in a given prokaryotic genome ( --). The fraction for eukaryotic genomes is typically much lower, although in the case of specific eukaryotic chromosomes, notable exceptions exist . In light of the above observations, we decided to generate our figures by manually comparing, for each and every one of the involved genes, the annotations reported during the release of the genome with those generated by our method. The results are given in Table . The first three genomes, namely Rickettsia conorii Malish 7 , Staphylococcus aureus Mu50  and Streptococcus pneumoniae TIGR4  were published and made available in the Fall of 2001. The last two genomes, namely Chlamydia pneumoniae J138  and Buchnera sp. APS  were published in June and September 2000, respectively, but their GenBank records were updated in the Fall of 2001. For each genome we report the number and percentage of genes that fall into each of the following categories: (i) the latest GenBank annotation and our annotation agree; (ii) the GenBank annotation contains a 'hypothetical protein' entry whereas our system proposes a functional hypothesis; (iii) the GenBank annotation lists a functional hypothesis whereas our system reports a 'hypothetical protein'; and (iv) the GenBank annotation and our annotation disagree. As shown in Table , for the two genomes that were updated recently, the agreement between our automated predictions and the latest GenBank annotations reaches a level of 98% over the entire genome. It should be noted that this figure also includes those genes for which there is no functional hypothesis (i.e. they are listed as 'hypothetical proteins'). For the three novel genomes, the agreement between the predictions ranges between 88 and 92%. It is worth reiterating that the annotations that are included in the GenBank entries for the various genomes are the result of manually curating the output of multiple automated tools, whereas our scheme generates annotations in an entirely automated manner using a single unified framework. In recent collaborative work with colleagues from several European laboratories the complete genome of Chlamydia trachomatis serovar D  was re-annotated using (i) manual means, (ii) traditional automated tools and (iii) our method. As described in detail (I.Iliopoulos, S.Tsoka, M.A.Andrade, A.J.Enright, M.Caroll, P.Poullet, V.Promponas, T.Liakopoulos, G.Palaios, C.Pasquier, S.Hamodrakas et al., submitted for publication), the annotations that were obtained through manual means and through our Bio-Dictionary-based method achieved the best overall performance reaching an annotation agreement on 862 of the 893 processed sequences, i.e. 96.5% of the entire genome. Of the remaining 31 sequences, 13 could be annotated manually but could not be annotated by our method, whereas the other 18 could be annotated with our method but could not be annotated manually.  Example 6. Annotations on the World Wide Web | Similarly to the previous example, we have annotated the sequences of more than 70 complete genomes across the three phylogenetic domains, including: Methanococcus jannaschii DSM 2661 , Halobacterium sp. NRC-1 , Sulfolobus solfataricus P2 , Mycoplasma genitalium G-37 , Synechocystis sp. PCC 6803 , Escherichia coli K12-MG165 , Helicobacter pylori 26695 , Borrelia burgdorferi B31 , Aquifex aeolicus VF5 , Myco bacterium tuberculosis H37Rv , Chlamydia trachomatis serovar D , Chlamydophila pneumoniae CWL029 , Thermotoga maritima MSB8 , Deinococcus radiodurans R1 , Yersinia pestis CO92 , Saccharomyces cerevisiae S288C , Caenorhabditis elegans , Drosophila melanogaster , Homo sapiens (,) and Mus musculus. The annotations of these genomes are available on the World Wide Web and can be viewed and interactively explored by visiting . The system that we make available on the World Wide Web provides the user with several options. Within a specific genome, if the accession number of a gene is known, then it can be used to locate and view the annotation of the gene. Alternatively, one can search the results in the DE and FT attribute categories of the genome using regular expressions that can be entered with the help of a graphical user interface. For example, when run against the DE results, the regular expression -[1-3]].*calcium.*bind will locate and report all the sequences in the genome under consideration that 'share any similarities with calcium binding sequences and are ranked in the top three positions'. Analogously, when run against the FT results, the regular expression -[1-9]].*domain.*bh[1234].* will permit the user to search for sequences that 'contain one or more of the cell apoptosis-associated domains BH1, BH2, BH3 and BH4 and are ranked in the top nine positions'. To list the three top ranking functional hypotheses for each gene in a genome, one can use the regular expression -[1-3]] to search through the DE results. At  the user can find information on how to form these regular expressions and the permitted keywords, as well as several specific examples with explanations. Additionally, we have enabled and made available cross-genomic comparisons /searches: through a graphical user interface, one or more genomes can be selected and their annotations searched for similarities with a specific family (e.g. elongation factor, tRNA-aminoacyl synthetase, etc.) or the presence of a specific feature (e.g. hydrogen bond donor, calcium-binding domain, helix --turn --helix, etc.) with the help of regular expressions similar to those used to analyze individual genomes.  Figure 4 |  Some results from processing the human ubiquitin UBIQ_HUMAN by our method.  Some results from processing the human ubiquitin UBIQ_HUMAN by our method. Figure 5 |  Additional results from processing the human ubiquitin UBIQ_HUMAN by our method.  Additional results from processing the human ubiquitin UBIQ_HUMAN by our method. Figure 6 |  More results from processing the human ubiquitin UBIQ_HUMAN by our method.  More results from processing the human ubiquitin UBIQ_HUMAN by our method. Figure 7 |  Some of the results obtained from processing the fragment VVVTAHAF with our method.  Some of the results obtained from processing the fragment VVVTAHAF with our method. Figure 8 |  Partial results from processing the adrenocorticotropic hormone receptor protein ACTR_BOVIN by our method.  Partial results from processing the adrenocorticotropic hormone receptor protein ACTR_BOVIN by our method. Figure 9 |  Results of RPS-BLAST and PSI-BLAST using the sequence UL78_HCMVA as an input.  Results of RPS-BLAST and PSI-BLAST using the sequence UL78_HCMVA as an input. Default parameter settings were used. Figure 10 |  Partial results from processing the sequence UL78_HCMVA from human herpesvirus 5.  Partial results from processing the sequence UL78_HCMVA from human herpesvirus 5. See text for more details. Table 2 | Best GPCRDB /SwissProt hits when using UL78_HCMVA regions as the query (see also text) Table 3 | Annotations for a fictitious protein that are non-conflicting with one another but correspond to varying degrees of conveyed annotation detail Table 4 | Results from manually comparing our predictions with the annotations that have been reported for several genomes
In this paper, we have presented and discussed a new method for the automated annotation of amino acid sequences. The method quickly, objectively and exhaustively determines local and global similarities between a given query and any protein already present in a public database, the likeness of the query to all available archaeal /bacterial /eukaryotic /viral sequences in the database as a function of amino acid position within the query, the secondary structure character of the query as a function of amino acid position within the query, the cytoplasmic, transmembrane or extracellular behavior of the query, the nature and position of binding domains, active sites, post-translationally modified sites and signal peptides, etc. The key concept underlying our method is that of the Bio-Dictionary, which we presented and discussed in earlier work. By design, the presented method is extendable and can make use of any type of attribute that would be of interest to the end user. It can also make use of multiple databases. Through a carefully selected collection of examples, we have demonstrated the capabilities of our method and the quality of the annotations that it generates. Our system automatically generates results whose quality matches that of publicly available annotations; recall that such annotations are typically the product of a manual curation that has followed the application of automated processes. In terms of actual annotation speed, our system can annotate a 300 amino acid query in similar10 s on a single IBM RS64III processor running at a clock speed of 450 MHz. We are currently in the process of enhancing our system with several new components. One extension involves the automatic determination and reporting of all the PubMed references pertaining to the query sequence that is annotated. For each of the reported results in the DE category we will be making available links to all PubMed articles that are relevant for the study of the query sequence and the family described by the caption. This is currently work in progress. A second extension, which we have already described above, involves the automated generation of local 3D structure through 'meanings' that are derived from the contents of the PDB database. This is also work in progress. Finally, an important topic that we will be studying relates to the fact that the SwissProt /TrEMBL database has up to now used non-standardized nomenclature to label database entries. For example, the following are some of the DE lines that are associated with aldose reductases: aldose reductase (ec 1.1.1.21) (ar) (aldehyde reductase) aldose reductase alcohol dehydrogenase [nadp+] (ec 1.1.1.2)     (aldehyde reductase). When our system is presented with an aldose reductase as a query, e.g. ALDR_HUMAN, then multiple attribute vectors will be reported, one for each of these seemingly distinct (but in reality identical) attributes. A planned future release of our system will alleviate this problem through the use of standardized names.
